                  2   $LIST
0000              4   
0000              5   org 0000H
0000 0203FE       6      ljmp MyProgram
0003              7   
0003              8   cseg
0003              9   ; These 'equ' must match the hardware wiring
0003             10   LCD_RS equ P3.2
0003             11   ;LCD_RW equ PX.X ; Not used in this code, connect the pin to GND
0003             12   LCD_E  equ P3.3
0003             13   LCD_D4 equ P3.4
0003             14   LCD_D5 equ P3.5
0003             15   LCD_D6 equ P3.6
0003             16   LCD_D7 equ P3.7
0003             17   
                 19   	$LIST
00AF             21   
0030             22   DSEG at 0x30
0030             23   Period_A: ds 2
0032             24   Period_B: ds 2
0034             25   ;added Monday
0034             26   Player_1_score: ds 1
0035             27   Player_2_score: ds 1
0036             28   x:   ds 4
003A             29   y:   ds 4
003E             30   bcd: ds 5
0043             31   Seed: ds 4
0047             32   
                570   $LIST
                 34   $LIST
0345             36   
0000             37   bseg
0000             38   HLbit:   dbit 1
0001             39   mf:              dbit 1
0002             40   Point_Awarded: dbit 1
0003             41     
0345             42   CSEG
0345             43   ;                      1234567890123456    <- This helps determine the location of the counter
0345 506C6179    44   Initial_Message1:  db 'Player A:       ', 0
     65722041
     3A202020
     20202020
     00
0356 506C6179    45   Initial_Message2:  db 'Player B:       ', 0
     65722042
     3A202020
     20202020
     00
0367             46   
0367             47   ; When using a 22.1184MHz crystal in fast mode
0367             48   ; one cycle takes 1.0/22.1184MHz = 45.21123 ns
0367             49   ; (tuned manually to get as close to 1s as possible)
0367             50   Wait1s:
0367 7AB0        51       mov R2, #176
0369 79FA        52   X3: mov R1, #250
036B 78A6        53   X2: mov R0, #166
036D D8FE        54   X1: djnz R0, X1 ; 3 cycles->3*45.21123ns*166=22.51519us
036F D9FA        55       djnz R1, X2 ; 22.51519us*250=5.629ms
0371 DAF6        56       djnz R2, X3 ; 5.629ms*176=1.0s (approximately)
0373 22          57       ret
0374             58   
0374             59   ;Initializes timer/counter 2 as a 16-bit timer
0374             60   InitTimer2:
0374 75C800      61            mov T2CON, #0b_0000_0000 ; Stop timer/counter.  Set as timer (clock input is pin 22.1184MHz).
0377             62            ; Set the reload value on overflow to zero (just in case is not zero)
0377 75CB00      63            mov RCAP2H, #0
037A 75CA00      64            mov RCAP2L, #0
037D 22          65       ret
037E             66   
037E             67   ;Converts the hex number in TH2-TL2 to BCD in R2-R1-R0
037E             68   hex2bcd6:
037E E4          69            clr a
037F 7800        70       mov R0, #0  ;Set BCD result to 00000000 
0381 7900        71       mov R1, #0
0383 7A00        72       mov R2, #0
0385 7B10        73       mov R3, #16 ;Loop counter.
0387             74   
0387             75   hex2bcd_loop:
0387 E5CC        76       mov a, TL2 ;Shift TH0-TL0 left through carry
0389 33          77       rlc a
038A F5CC        78       mov TL2, a
038C             79       
038C E5CD        80       mov a, TH2
038E 33          81       rlc a
038F F5CD        82       mov TH2, a
0391             83         
0391             84            ; Perform bcd + bcd + carry
0391             85            ; using BCD numbers
0391 E8          86            mov a, R0
0392 38          87            addc a, R0
0393 D4          88            da a
0394 F8          89            mov R0, a
0395             90            
0395 E9          91            mov a, R1
0396 39          92            addc a, R1
0397 D4          93            da a
0398 F9          94            mov R1, a
0399             95            
0399 EA          96            mov a, R2
039A 3A          97            addc a, R2
039B D4          98            da a
039C FA          99            mov R2, a
039D            100            
039D DBE8       101            djnz R3, hex2bcd_loop
039F 22         102            ret
03A0            103   
03A0            104   ; Dumps the 5-digit packed BCD number in R2-R1-R0 into the LCD
03A0            105   DisplayBCD_LCD:
03A0            106            ; 5th digit:
03A0 EA         107       mov a, R2
03A1 540F       108       anl a, #0FH
03A3 4430       109       orl a, #'0' ; convert to ASCII
03A5 120053     110            lcall ?WriteData
03A8            111            ; 4th digit:
03A8 E9         112       mov a, R1
03A9 C4         113       swap a
03AA 540F       114       anl a, #0FH
03AC 4430       115       orl a, #'0' ; convert to ASCII
03AE 120053     116            lcall ?WriteData
03B1            117            ; 3rd digit:
03B1 E9         118       mov a, R1
03B2 540F       119       anl a, #0FH
03B4 4430       120       orl a, #'0' ; convert to ASCII
03B6 120053     121            lcall ?WriteData
03B9            122            ; 2nd digit:
03B9 E8         123       mov a, R0
03BA C4         124       swap a
03BB 540F       125       anl a, #0FH
03BD 4430       126       orl a, #'0' ; convert to ASCII
03BF 120053     127            lcall ?WriteData
03C2            128            ; 1st digit:
03C2 E8         129       mov a, R0
03C3 540F       130       anl a, #0FH
03C5 4430       131       orl a, #'0' ; convert to ASCII
03C7 120053     132            lcall ?WriteData
03CA            133       
03CA 22         134       ret
03CB            135   
03CB            136   ;--------------------------;
03CB            137   ;   player1 score incement ;
03CB            138   ;--------------------------;
03CB            139   inc_player_1: 
03CB E534       140            mov a, Player_1_score
03CD 200002     141            jb HLbit, player_1_increment
03D0            142     
03D0            143     ;decrement because HBit = 0
03D0 6006       144     jz player1_da
03D2            145   
03D2            146   player_1_increment:
03D2 2499       147     add a, #0x99
03D4 8002       148     sjmp player1_da
03D6            149     
03D6 2401       150     add a,#0x01
03D8            151     
03D8            152   player1_da:
03D8 D4         153     da a
03D9 F534       154     mov Player_1_score, a
03DB E4         155     clr a
03DC C201       156     clr mf
03DE D202       157     setb Point_Awarded
03E0 22         158            ret
03E1            159   
03E1            160   ;--------------------------;
03E1            161   ;   player2 score incement ;
03E1            162   ;--------------------------;
03E1            163   inc_player_2: 
03E1 E535       164            mov a, Player_2_score
03E3 200002     165            jb HLbit, player_2_increment
03E6            166     
03E6            167     ;decrement because HBit = 0
03E6 6006       168     jz player2_da
03E8            169       
03E8            170   player_2_increment:
03E8 2499       171     add a, #0x99
03EA 8002       172     sjmp player2_da
03EC            173     
03EC 2401       174     add a,#0x01
03EE            175     
03EE            176   player2_da:
03EE D4         177     da a
03EF F535       178     mov Player_2_score, a
03F1 E4         179     clr a
03F2 C201       180     clr mf
03F4 D202       181     setb Point_Awarded
03F6 22         182            ret
03F7            183   
03F7            184   ;---------------------------------;
03F7            185   ; Hardware initialization         ;
03F7            186   ;---------------------------------;
03F7            187   Initialize_All:
03F7 120374     188       lcall InitTimer2
03FA 12005D     189       lcall LCD_4BIT ; Initialize LCD
03FD 22         190            ret
03FE            191   
03FE            192   ;---------------------------------;
03FE            193   ; Main program loop               ;
03FE            194   ;---------------------------------;
03FE            195   MyProgram:
03FE            196       ; Initialize the hardware:
03FE 75817F     197       mov SP, #7FH
0401 1203F7     198       lcall Initialize_All
0404            199       ; Make sure the two input pins are configure for input
0404 D2A0       200       setb P2.0 ; Pin is used as input
0406 D2A1       201       setb P2.1 ; Pin is used as input
0408            202   
0408 C0E0       203            push acc
040A 7401       203            mov a, #1
040C 14         203            dec a
040D 120094     203            lcall ?Set_Cursor_1 ; Select column and row
0410 D0E0       203            pop acc
0412 C083       204            push dph
0414 C082       204            push dpl
0416 C0E0       204            push acc
0418 900345     204            mov dptr, #Initial_Message1
041B 120087     204            lcall ?Send_Constant_String
041E D0E0       204            pop acc
0420 D082       204            pop dpl
0422 D083       204            pop dph
0424 C0E0       205            push acc
0426 7401       205            mov a, #1
0428 14         205            dec a
0429 120092     205            lcall ?Set_Cursor_2 ; Select column and row
042C D0E0       205            pop acc
042E C083       206            push dph
0430 C082       206            push dpl
0432 C0E0       206            push acc
0434 900356     206            mov dptr, #Initial_Message2
0437 120087     206            lcall ?Send_Constant_String
043A D0E0       206            pop acc
043C D082       206            pop dpl
043E D083       206            pop dph
0440            207       
0440            208   forever:
0440            209   
0440            210   ;------------------------------Player 1  Capacitor-----------------------------------------;
0440 C2CA       211       clr TR2 ; Stop counter 2
0442 75CC00     212       mov TL2, #0
0445 75CD00     213       mov TH2, #0
0448 20A0FD     214       jb P2.0, $
044B 30A0FD     215       jnb P2.0, $
044E 7864       216       mov R0, #100
0450 D2CA       217       setb TR2 ; Start counter 0
0452            218   meas_loop1:
0452 20A0FD     219       jb P2.0, $
0455 30A0FD     220       jnb P2.0, $
0458 D8F8       221       djnz R0, meas_loop1 ; Measure the time of 100 periods
045A C2CA       222       clr TR2 ; Stop counter 2, TH2-TL2 has the period
045C            223       ; save the period of P2.0 for later use
045C 85CC30     224       mov Period_A+0, TL2
045F 85CD31     225       mov Period_A+1, TH2
0462            226   
0462            227            ; Convert the result to BCD and display on LCD
0462            228            
0462            229     ;added Monday
0462            230     ;move TL2 and Th2 into x
0462 85CC36     231     mov x+0, TL2
0465 85CD37     232     mov x+1, Th2
0468 753800     233            mov x+2, #0
046B 753900     234     mov x+3, #0
046E            235     
046E            236     ;move threshold into y
046E 753A40     237            mov y+0, #low (8000 % 0x10000) 
0471 753B1F     237            mov y+1, #high(8000 % 0x10000) 
0474 753C00     237            mov y+2, #low (8000 / 0x10000) 
0477 753D00     237            mov y+3, #high(8000 / 0x10000) 
047A 1201D3     238     lcall x_gt_y
047D            239   
047D 200102     240            jb mf, inc1
0480 8003       241     sjmp no_inc1
0482 0203CB     242   inc1: ljmp inc_player_1
0485            243   no_inc1:
0485            244   
0485            245     
0485 C0E0       246            push acc
0487 740B       246            mov a, #11
0489 14         246            dec a
048A 120094     246            lcall ?Set_Cursor_1 ; Select column and row
048D D0E0       246            pop acc
048F 12037E     247            lcall hex2bcd6
0492 1203A0     248       lcall DisplayBCD_LCD
0495            249       
0495            250   ;------------------------------Player 2  Capacitor-----------------------------------------;
0495            251       
0495            252       ; Measure the period applied to pin P2.1
0495 C2CA       253       clr TR2 ; Stop counter 2
0497 75CC00     254       mov TL2, #0
049A 75CD00     255       mov TH2, #0
049D 20A1FD     256       jb P2.1, $
04A0 30A1FD     257       jnb P2.1, $
04A3 7864       258       mov R0, #100
04A5 D2CA       259       setb TR2 ; Start counter 0
04A7            260   meas_loop2:
04A7 20A1FD     261       jb P2.1, $
04AA 30A1FD     262       jnb P2.1, $
04AD D8F8       263       djnz R0, meas_loop2 ; Measure the time of 100 periods
04AF C2CA       264       clr TR2 ; Stop counter 2, TH2-TL2 has the perioda
04B1            265       ; save the period of P2.1 for later use
04B1 85CC32     266       mov Period_B+0, TL2
04B4 85CD33     267       mov Period_B+1, TH2
04B7            268            
04B7            269     ;added Monday
04B7            270     ;move TL2 and TH2 into x
04B7            271     
04B7 85CC36     272            mov x+0, TL2
04BA 85CD37     273     mov x+1, TH2
04BD 753800     274            mov x+2, #0
04C0 753900     275     mov x+3, #0
04C3            276     
04C3            277     ;move threshold into y
04C3 753A80     278            mov y+0, #low (16000 % 0x10000) 
04C6 753B3E     278            mov y+1, #high(16000 % 0x10000) 
04C9 753C00     278            mov y+2, #low (16000 / 0x10000) 
04CC 753D00     278            mov y+3, #high(16000 / 0x10000) 
04CF 1201D3     279       lcall x_gt_y
04D2            280   
04D2 200102     281            jb mf, inc2
04D5 8003       282     sjmp no_inc2
04D7 0203E1     283   inc2: ljmp inc_player_2
04DA            284   no_inc2:
04DA            285   
04DA            286            ; Convert the result to BCD and display on LCD
04DA C0E0       287            push acc
04DC 740B       287            mov a, #11
04DE 14         287            dec a
04DF 120092     287            lcall ?Set_Cursor_2 ; Select column and row
04E2 D0E0       287            pop acc
04E4 12037E     288            lcall hex2bcd6
04E7 1203A0     289       lcall DisplayBCD_LCD
04EA            290       
04EA 020440     291       ljmp forever ; Repeat! 
04ED            292   en
